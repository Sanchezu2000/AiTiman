@model AiTimanMVC.Models.AppointmentViewModel
@{
    ViewData["Title"] = "Set Appointment";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="content-body">
    <div class="container">
        <!-- Left Side: Appointment Form -->
        <div class="form-container">
            <h3 class="form-title">@ViewData["Title"]</h3>

            <form asp-action="Appointment" method="post">

                <div asp-validation-summary="All" class="text-danger">

                <div class="form-floating mb-3">
                    <input asp-for="AppointmentName" class="form-control" required />
                    <label asp-for="AppointmentName">Appointment Name</label>
                    <span asp-validation-for="AppointmentName" class="text-danger"></span>
                </div>
                <div class="form-floating mb-3">
                    <input asp-for="ScheduleDate" class="form-control" type="date" required />
                    <label asp-for="ScheduleDate">Schedule Date</label>
                    <span asp-validation-for="ScheduleDate" class="text-danger"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="ScheduleTime" class="form-control"  required />
                    <label asp-for="ScheduleTime">Schedule Time</label>
                    <span asp-validation-for="ScheduleTime" class="text-danger"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="NumberOfSlots" class="form-control" type="number" min="1" required />
                    <label asp-for="NumberOfSlots">Number of Slots</label>
                    <span asp-validation-for="NumberOfSlots" class="text-danger"></span>
                </div>

                <div class="form-floating mb-3">
                    <input asp-for="DoctorInCharge" class="form-control" required />
                    <label asp-for="DoctorInCharge">Doctor In Charge</label>
                    <span asp-validation-for="DoctorInCharge" class="text-danger"></span>
                </div>

                    <div class="form-floating mb-3">
                        <input asp-for="AppointmentSetter" class="form-control" required />
                        <label asp-for="AppointmentSetter">Set By:</label>
                        <span asp-validation-for="AppointmentSetter" class="text-danger"></span>
                    </div>




                    <button type="submit" value="Appointment" class="btn btn-lg btn-primary w-100">Submit Booking</button>
               </div>
            </form>
        </div>
       

        <!-- Right Side: Calendar Picker -->
        <div class="calendar-container">
            <h3>Select Available Slot</h3>
            <div class="calendar-navigation">
                <button id="prev-month">&lt;</button>
                <span id="month-year"></span>
                <button id="next-month">&gt;</button>
            </div>
            <div class="calendar" id="calendar">
                <div class="calendar-header">
                    <div>Sun</div>
                    <div>Mon</div>
                    <div>Tue</div>
                    <div>Wed</div>
                    <div>Thu</div>
                    <div>Fri</div>
                    <div>Sat</div>
                </div>
                <!-- Calendar days will be dynamically generated here -->
            </div>
        </div>
    </div>
</div>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const calendarElement = document.getElementById('calendar');
            const monthYearElement = document.getElementById('month-year');
            const prevMonthButton = document.getElementById('prev-month');
            const nextMonthButton = document.getElementById('next-month');

            let currentDate = new Date();

            function generateCalendar(date) {
                calendarElement.innerHTML = '';
                const year = date.getFullYear();
                const month = date.getMonth();

                const firstDay = new Date(year, month, 1).getDay();
                const lastDate = new Date(year, month + 1, 0).getDate();

                for (let i = 0; i < firstDay; i++) {
                    const emptyDiv = document.createElement('div');
                    calendarElement.appendChild(emptyDiv);
                }

                for (let day = 1; day <= lastDate; day++) {
                    const dayDiv = document.createElement('div');
                    dayDiv.className = 'calendar-day';
                    dayDiv.innerText = day;

                    const dayOfWeek = new Date(year, month, day).getDay();

                    // Highlight Sundays in red
                    if (dayOfWeek === 0) {
                        dayDiv.style.color = 'red';
                    } else {
                        dayDiv.style.color = 'black';
                    }

                    calendarElement.appendChild(dayDiv);
                }

                monthYearElement.innerText = `${date.toLocaleString('default', { month: 'long' })} ${year}`;
            }

            prevMonthButton.addEventListener('click', function () {
                currentDate.setMonth(currentDate.getMonth() - 1);
                generateCalendar(currentDate);
            });

            nextMonthButton.addEventListener('click', function () {
                currentDate.setMonth(currentDate.getMonth() + 1);
                generateCalendar(currentDate);
            });

            generateCalendar(currentDate);
        });
    </script>
}

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: #f4f4f4;
        margin: 0;
    }

    .container {
        display: flex;
        justify-content: space-between;
        gap: 20px;
        max-width: 1200px;
        margin: auto;
        padding: 20px;
    }

    .form-container, .calendar-container {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 8px 16px rgba(173, 216, 230, 0.4), 0 6px 20px rgba(173, 216, 230, 0.3);
    }

    .form-title {
        text-align: center;
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        color: #333;
    }

    .form-floating {
        margin-bottom: 1.5rem;
    }

    button {
        width: 100%;
        padding: 15px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1rem;
        transition: background 0.3s;
    }

    .calendar {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 10px;
        background: #f8f9fa;
        padding: 10px;
        border-radius: 8px;
    }

    .calendar-day {
        padding: 15px;
        background: #ffffff;
        text-align: center;
        border: 1px solid #e0e0e0;
        border-radius: 5px;
        cursor: pointer;
        font-weight: bold;
        font-size: 14px;
    }

    .calendar-navigation {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .calendar-header div {
        font-weight: bold;
        text-align: center;
    }

    .calendar-day:hover {
        background-color: #e9ecef;
    }
</style>
